@page "/"

@inject IApiClient apiClient
@inject IJSRuntime JsRuntime
@inject NavigationManager NavManager

<PageTitle>Todo lists</PageTitle>

<h1>Todo lists</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (categories == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <p><a class="btn btn-primary" href="/create">Add new</a></p>
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Title</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var todoList in categories)
            {
                <tr>
                    <td>@todoList.Id</td>
                    <td>@todoList.Title</td>
                    <td>
                        <a href="/edit/@todoList.Id" class="btn btn-primary">Edit</a>
                        <button class="btn btn-primary" @onclick="() => Delete(todoList.Id)">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private List<Category> categories;

    protected override async Task OnInitializedAsync()
    {
        var result = await apiClient.List();

        categories = result.Value;
    }

    protected async Task Delete(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (!confirmed)
        {
            return;
        }

        await apiClient.Delete(id);

        NavManager.Refresh();
    }
}